module game_datapath#(
    SLOW_CLOCK_DIV ~ 26 : SLOW_CLOCK_DIV > 0,
    LVL1_CLOCK_DIV ~ 25 : LVL1_CLOCK_DIV > 0,
    LVL2_CLOCK_DIV ~ 24 : LVL2_CLOCK_DIV >0,
    LVL3_CLOCK_DIV ~ 23 : LVL3_CLOCK_DIV >0,
    FAST_CLOCK_DIV ~ 20 : FAST_CLOCK_DIV>0 
) (
    input button1,
    input button2,
    input button3,
    input button4,
    input button5,
    input button6,
    input buttonstart,
    //input buttonreset
    input clk,  // clock
    input rst,  // reset
    
    output timerout[32],
    output scoreout[32],
    output buttonmapout[32],
    //output modeout[32],
    output levelcounterout[32],
    output awakeout[32],
    output activebuttonout[32],
    output activetypeout[32],
    output cooldownout[32],
    output interval1blinker[32],
    output interval2blinker[32],
    output interval3blinker[32],
    
    output slow_clock_out,
    output debug_general[4]
) {
    sig input_alu_a[32]
    sig input_alu_b[32]
    
    alu game_alu
    .clk(clk){
        generate_rn gen_rn(#FAST_CLOCK_DIV(FAST_CLOCK_DIV),.rst(rst))
        counter level_one_interval(#SIZE(1),#DIV(LVL1_CLOCK_DIV),.rst(rst))
        counter level_two_interval(#SIZE(1),#DIV(LVL2_CLOCK_DIV),.rst(rst))
        counter level_three_interval(#SIZE(1),#DIV(LVL3_CLOCK_DIV),.rst(rst))
        counter game_timer_clock(#SIZE(1),#DIV(SLOW_CLOCK_DIV),.rst(rst))
        
        edge_detector edge_detector_level_one_interval(#RISE(1), #FALL(0), .in(level_one_interval.value))
        edge_detector edge_detector_level_two_interval(#RISE(1), #FALL(0), .in(level_two_interval.value))
        edge_detector edge_detector_level_three_interval(#RISE(1), #FALL(0), .in(level_three_interval.value))
        edge_detector edge_detector_game_timer(#RISE(1), #FALL(0), .in(game_timer_clock.value))
        
        game_cu game_cu(
        .button1(button1),
        .button2(button2),
        .button3(button3),
        .button4(button4),
        .button5(button5),
        .button6(button6),
        .buttonstart(buttonstart),
        .rst(rst),
        .interval1(edge_detector_level_one_interval.out),
        .interval2(edge_detector_level_two_interval.out),
        .interval3(edge_detector_level_three_interval.out),
        .decrease_timer(edge_detector_game_timer.out)
        )
        
        game_regfiles game_regfiles(
        .we(game_cu.regfile_we),
        .wa(game_cu.regfile_wa),
        .ra1(game_cu.regfile_ra1),
        .ra2(game_cu.regfile_ra2),
        .rst(rst)
        )
    }
    always {
        //following the bootstrap
        game_cu.regfile_rd2=game_regfiles.rd2
        
        case(game_cu.asel){
            b00:input_alu_a=game_regfiles.rd1
            b01:input_alu_a=d5
            b10:input_alu_a=d20
            b11:input_alu_a=d99
            default:input_alu_a=d0
        }
        
        case(game_cu.bsel){
            b0000:input_alu_b=game_regfiles.rd2
            b0001:input_alu_b=d1
            b0010:input_alu_b=d2
            b0011:input_alu_b=d3
            b0100:input_alu_b=d4
            b0101:input_alu_b=d5
            b0110:input_alu_b=d6
            b0111:input_alu_b=d20
            b1000:input_alu_b=d60
            b1001:input_alu_b=d99
            default:input_alu_b=d0
    }
        game_alu.a=input_alu_a
        game_alu.b=input_alu_b
        game_alu.alufn=game_cu.alufn
        
        case(game_cu.alu_out_sel){
            b001:game_regfiles.data=hFFFF
            b010:game_regfiles.data=h1F1F
            b011:game_regfiles.data=0
            b100:game_regfiles.data=gen_rn.out //i need random numbers lmao
            default:game_regfiles.data=game_alu.out
        }
        timerout=game_regfiles.timerout
        scoreout=game_regfiles.scoreout
        levelcounterout=game_regfiles.levelcounterout
        activebuttonout=game_regfiles.activebuttonout
        activetypeout=game_regfiles.activetypeout
        slow_clock_out=game_timer_clock.value
        interval1blinker=level_one_interval.value
        interval2blinker=level_two_interval.value
        interval3blinker=level_three_interval.value
        awakeout=game_regfiles.awakeout
        cooldownout=game_regfiles.cooldownout
        buttonmapout=game_regfiles.buttonmapout
        
        debug_general=game_cu.debug //literally nothing rn
        
    }
}
